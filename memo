・動的型付け言語（Perl/PHP/Ruby/Javascript/VBScript等）とは

  変数や関数に何が入ってくるか特に決まっていない形を指す。
  インタプリタ（ソースコードを１命令ずつ解釈し実行する言語）で実行される言語はほぼこの形式。
  メリット
    小さいプログラムや型の変動が激しい環境であれば簡単に実装可能。
    入れものの大きさを気にする必要がない。
  デメリット
    事前にコンパイルしてネイティブなコードを出力できない。

  例え「70gのプリンを作るのに大きさが指定されてないので20リットルのバケツで作る」
  →「型を指定していない（プログラムで指定していない）以上、最大であるのが最適解である」
  → つまり、メモリ上の使用量が大幅に増えてしまう。


・静的型付け言語とは

  変数や関数に型を予め定義しておき、その型以外のデータを変数では使えない。
  事前にコンパイルが必須

  例え「70gの入る器を用意して欲しいと指示がある。そして、材料を混ぜるための器の大きさも「指示」がなされる」
  → この変数や関数では、どの程度の値までしか入らないということが想定されており、無駄な値を入れたり容量をとられなくなる。


参考
https://qiita.com/toryuneko/items/c023031b61886cae2a99
